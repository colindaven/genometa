<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:util="util.*"
	width="100%" height="100%"
	creationComplete="init();"> 
	
   <mx:HTTPService             
    id="deleteDictionary" 
    url="genopub/dictionaryDelete"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onDeleteDictionary(event)"
    fault="parentApplication.onFailHttpRequest('Failed to remove group', event)"
    method="POST"
    useProxy="false">
    <mx:request>
    </mx:request>
   </mx:HTTPService> 
   
   <mx:HTTPService             
    id="updateDictionary" 
    url="genopub/dictionaryUpdate"
    resultFormat="e4x"
    showBusyCursor="true"
    result="onUpdateDictionary(event)"
    fault="parentApplication.onFailHttpRequest('Failed to update group', event)"
    method="POST"
    useProxy="false">
    <mx:request>
    </mx:request>
   </mx:HTTPService> 
   	
<mx:Script>
	<![CDATA[
		import mx.events.CloseEvent;
		import mx.rpc.events.ResultEvent;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;
		
		private var treeItemToSelect:Object = null;
		
		public function init():void
        {
        	currentState = "";
        	if (parentApplication.isAdmin()) {
            	this.currentState = "AdminState";
            } else {
            	this.currentState = "UserState";
            }
        }

		
		public function refresh():void {
			if (dirtyDictionary != null) {
				dirtyDictionary.resetDirty();
			}
			treeItemToSelect = null;
			parentApplication.getDictionaries.send();
		}
		
        public function refreshAndSelect(theItemToSelect:Object):void {
        	if (dirtyDictionary != null) {
				dirtyDictionary.resetDirty();
        	}
        	treeItemToSelect = theItemToSelect;
        	parentApplication.getDictionaries.send();
        }		
        
		public function getTreeIcon(item:Object):Class {
			if (item.name() == "Dictionary") {
				return parentApplication.iconDictionary;
			} else {
				return parentApplication.iconDictionaryEntry;
			} 
		}    
	
		public function expandAllTreeNodes():void {
	  		dictionaryTree.expandItem(parentApplication.getDictionaries.lastResult, true);
	  		for each(var d:Object in parentApplication.getDictionaries.lastResult.Dictionary) {
	  			dictionaryTree.expandItem(d, true);
	  		}
	  		callLater(selectTreeItem);
		}	
		
		private function selectTreeItem():void {
			if (treeItemToSelect != null) {
				var item:Object = parentApplication.getDictionaries.lastResult..DictionaryEntry.(@dictionaryName == treeItemToSelect.@dictionaryName && @id == treeItemToSelect.@id);
				if (item != null) {
					dictionaryTree.selectedItem = item[0];
					dictionaryTree.scrollToIndex(dictionaryTree.selectedIndex);
					
					if (currentState == "AdminState") {
						parentApplication.selectDictionaryComboBox(this.dictionaryEntryOwnerCombo, dictionaryTree.selectedItem.@idUser, parentApplication.dictionaryUser);
					}
					this.theViews.selectedChild = dictionaryView;
				} else {
					this.theViews.selectedChild = blankView;
				}
			} else {
				this.theViews.selectedChild = blankView;
			}
		}
		
		
		public function onTreeClick():void {
			if (dictionaryTree.selectedItem != null) {
				if (dictionaryTree.selectedItem.name() == "Dictionary") {
					theViews.selectedChild = blankView;
				} else {
					theViews.selectedChild = dictionaryView;
					
					if (currentState == "AdminState") {
						parentApplication.selectDictionaryComboBox(this.dictionaryEntryOwnerCombo, dictionaryTree.selectedItem.@idUser, parentApplication.dictionaryUser);
					}
				}
			} else {
				theViews.selectedChild = blankView;
			}
		}	
		
	
	    private function newDictionary():void {
            var dictionaryAddWindow:DictionaryAddWindow = DictionaryAddWindow(PopUpManager.createPopUp(parentApplication.mainArea, DictionaryAddWindow, true));
            PopUpManager.centerPopUp(dictionaryAddWindow);
            dictionaryAddWindow.dictionaryName = dictionaryTree.selectedItem.@dictionaryName;
            dictionaryAddWindow.dictionaryDisplayName = dictionaryTree.selectedItem.@dictionaryDisplayName;
            dictionaryAddWindow.theName.setFocus();
        }	
        
        private function promptToRemoveDictionary():void {
         	Alert.show("Remove dictionary " + dictionaryTree.selectedItem.@label + "?",
						null, 
						(Alert.YES | Alert.NO), this, 
						onPromptToRemoveDictionary);     
         	
        }
        		
		private function onPromptToRemoveDictionary(event:CloseEvent):void {
            if (event.detail==Alert.YES) {
            	removeDictionary();
            }
        }
        		
        private function removeDictionary():void {
        	var params:Object = new Object();
        	params.id            = dictionaryTree.selectedItem.@id;
        	params.dictionaryName = dictionaryTree.selectedItem.@dictionaryName;
        	deleteDictionary.send(params);
        }
        
        private function onDeleteDictionary(event:ResultEvent):void {
		  if (deleteDictionary.lastResult.name() == "SUCCESS") {
		  	this.dirtyDictionary.resetDirty();
		  	this.treeItemToSelect = null;
		  	refresh();			
		  } else if (deleteDictionary.lastResult.name() == "Error") {
			Alert.show(deleteDictionary.lastResult.@message);
		  } else {
			Alert.show("An error occurred while removing dictionary");				
		  }
		}
		
		private function saveDictionary():void {
			var params:Object = new Object();
        	params.id              = dictionaryTree.selectedItem.@id;
        	params.dictionaryName  = dictionaryTree.selectedItem.@dictionaryName;
        	params.name            = dictionaryName.text;
        	params.isActive        = isActiveCheckbox.selected ? 'Y' : 'N';
        	if (currentState == "AdminState") {
        		params.idUser      = this.dictionaryEntryOwnerCombo.selectedItem != null ? this.dictionaryEntryOwnerCombo.selectedItem.@id : "";
        	} else {
        		params.idUser      = dictionaryTree.selectedItem.@idUser;
        	}
        	
        	updateDictionary.send(params);
		}
		
		 
        private function onUpdateDictionary(event:ResultEvent):void {
		  if (updateDictionary.lastResult.name() == "SUCCESS") {
		  	this.dirtyDictionary.resetDirty();
		  	this.treeItemToSelect = this.dictionaryTree.selectedItem;
		  	refreshAndSelect(this.treeItemToSelect);			
		  } else if (updateDictionary.lastResult.name() == "Error") {
			Alert.show(updateDictionary.lastResult.@message);
		  } else {
			Alert.show("An error occurred while saving dictionary");				
		  }
		}

	]]>
</mx:Script>
	<mx:HDividedBox width="100%"  height="100%" paddingTop="0" >

	    <mx:VBox  styleName="headerBar" height="100%" width="300"   >
	
            <mx:Label text="Dictionaries" width="80" styleName="headerLabel"/>
            <mx:HBox  horizontalGap="2"  width="100%" horizontalAlign="left">		 
             <mx:LinkButton 
             	icon="@Embed(source='assets/page_new.png')" 
             	disabledIcon="@Embed(source='assets/page_new_disable.png')" 
             	styleName="linkMenuButton"
             	toolTip="Add dictionary entry" 
             	click="newDictionary()" 
             	enabled="{dictionaryTree.selectedItem != null}" label="New dictionary"/>
                      
             <mx:LinkButton 
             	icon="@Embed(source='assets/page_remove.png')" 
             	enabled="{dictionaryTree.selectedItem != null &amp;&amp; dictionaryTree.selectedItem.name() != 'Dictionary' &amp;&amp; dictionaryTree.selectedItem.@canWrite == 'Y'}"
             	disabledIcon="@Embed(source='assets/page_remove_disable.png')" 
             	styleName="linkMenuButton"
             	click="promptToRemoveDictionary()" 
             	id="deleteDictionaryButton" label="Remove dictionary"/>
            </mx:HBox>
    
			<mx:Tree height="100%" width="100%" 
				dataProvider="{parentApplication.getDictionaries.lastResult.Dictionary}" 
				labelField="@label"
				borderStyle="solid" 
				iconFunction="getTreeIcon"
    		    id="dictionaryTree"
    		    showRoot="true"
    		    click="onTreeClick()"
    		    iconField="@icon" dropShadowEnabled="true" dropShadowColor="#858282">
			</mx:Tree>			
			<mx:HBox width="100%" horizontalAlign="left">
				<mx:LinkButton styleName="linkMenuButton" label="Refresh" icon="@Embed(source='assets/refresh.png')" click="{refresh()}"/>
			</mx:HBox>
	   </mx:VBox>
	    
	    
	   <mx:ViewStack id="theViews" width="100%" height="100%" creationPolicy="all">
	   	   <mx:Panel id="blankView" width="100%" height="100%" borderThicknessBottom="28">
	   	   </mx:Panel>
	   
	   
		   <mx:Panel id="dictionaryView" width="100%" height="100%" titleIcon="{parentApplication.iconDictionaryEntry}" title="Dictionary" >
		        <mx:VBox styleName="panelBody" width="100%" height="100%" verticalGap="10">
		        	<mx:HBox width="100%" verticalGap="0">
		        		<mx:Label text="Name:" width="80"/>
		        		<mx:TextInput text="{dictionaryTree.selectedItem.@name}" width="100%" id="dictionaryName" change="dirtyDictionary.setDirty()" maxChars="100"/>
		        	</mx:HBox>
		        	<mx:HBox width="100%">
		        		<mx:Spacer width="80"/>
		        		<mx:CheckBox label="Active" id="isActiveCheckbox" click="dirtyDictionary.setDirty()">
		        			<mx:selected>{dictionaryTree.selectedItem.@isActive == 'Y' ? true : false}</mx:selected>
		        		</mx:CheckBox>
		        	</mx:HBox>
		        	<mx:HBox width="100%" id="hbox1">
						<mx:Label text="Owner:" width="80"/>
		        		<mx:ComboBox width="100%" id="dictionaryEntryOwnerCombo" labelField="@name" dataProvider="{parentApplication.dictionaryUser}" change="dirtyDictionary.setDirty()"></mx:ComboBox>							         			
		        	</mx:HBox>
		        	<mx:HBox width="100%" verticalGap="0" height="100%">
		        	</mx:HBox>
		        </mx:VBox>
		   		<mx:ControlBar horizontalAlign="right">				  
				    <util:DirtyNote id="dirtyDictionary" />
				   	<mx:Button  label="Save" click="saveDictionary()" icon="@Embed(source='assets/save.png')"  disabledIcon="@Embed(source='assets/save_disable.png')" enabled="{dictionaryTree.selectedItem.@canWrite == 'Y' ? true : false}"/>
				</mx:ControlBar>
	
	   	</mx:Panel>		
	   	
	   </mx:ViewStack>
	</mx:HDividedBox>

   <mx:states>
      <mx:State name="AdminState"/>
      <mx:State name="UserState">
         <mx:AddChild relativeTo="{hbox1}" position="lastChild">
            <mx:Label text="{dictionaryTree.selectedItem.@owner}"/>
         </mx:AddChild>
         <mx:RemoveChild target="{dictionaryEntryOwnerCombo}"/>
      </mx:State>
   </mx:states>

</mx:Canvas>
